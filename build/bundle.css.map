{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import '../node_modules/normalize.css/normalize.css'\n  import '../node_modules/milligram/dist/milligram.css'\n\timport Form from './Form.svelte'\n\timport Media from './Media.svelte'\n\n\timport { getMediaByCode } from 'instagram-stories'\n\n\tlet url, media\n  let mediaExist = true\n\n\tconst getMedia = async () => {\n    try {\n      const code = extractUrl(url)\n      const { graphql : { shortcode_media } } = await getMediaByCode(code)\n      const nodes = await extractMedia(shortcode_media)\n\n      media = Array.isArray(nodes) ? nodes : [ nodes ]\n      url = ''\n      mediaExist = true\n    } catch (error) {\n      media = []\n      url = ''\n      mediaExist = false\n    }\n  }\n\n  const extractUrl = (url) => {\n    const regex = /p\\/([_a-z0-9-]+)/gi\n    const match = url.match(regex)\n\n    return (match) ? match.shift().substring(2) : url\n  }\n\n\tconst extractMedia = async (json) => {\n    switch (json.__typename) {\n      case 'GraphImage':\n        return {\n          typename: json.__typename,\n          src: json.display_resources.pop().src\n        }\n      case 'GraphVideo':\n        return {\n          typename: json.__typename,\n          src: json.video_url\n        }\n        return \n        break\n      case 'GraphSidecar':\n        const extractMediaPromises = json.edge_sidecar_to_children.edges\n          .map(item => extractMedia(item.node))        \n        const media = await Promise.all(extractMediaPromises)\n        return media\n        break\n      default:\n        return {\n          typename: json.__typename,\n          src: json.display_url\n        }\n        break\n    }\n  }\n\n  window.addEventListener('share', (e) => {\n    url = e.detail\n    getMedia()\n  }, false);\n</script>\n\n<style>\n  .container {\n    max-width: 400px;\n    margin: 0 auto;\n  }\n</style>\n\n<div class=\"container\">\n  <header>\n    <h1>Yet!</h1>\n    <p>Another instagram downloader</p>\n  </header>\n\n  <main>\n    {#if !mediaExist}\n      <blockquote>\n        Media not found\n      </blockquote>\n    {/if}\n    \n    <Form bind:url={ url } on:click={ getMedia }></Form>\n    <Media media={ media }></Media>\n  </main>\n\n  <footer>\n    <hr>\n    Made with ‚ù§ by Husnul Anwari<br>\n    <a href=\"https://github.com/husnulhamidiah/yet\" target=\"_blank\">Github</a>\n  </footer>\n</div>"
  ],
  "names": [],
  "mappings": "AAsEE,UAAU,cAAC,CAAC,AACV,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC"
}